#===============================================================================
# aggregator app properties
#===============================================================================
iota.aggregator.trip.threshold=600
iota.aggregator.trip.threshold-delta=60
iota.aggregator.kstream.session-state.key-serde=org.apache.kafka.common.serialization.Serdes$StringSerde
iota.aggregator.kstream.session-state.value-serde=com.msg.iota.dataaggregator.stream.state.SessionStateJsonSerde
iota.aggregator.queue.commit.num-of-workers=5
iota.aggregator.queue.commit.max=10000
iota.aggregator.queue.commit.interval=2000
iota.aggregator.trip.min-size=1
iota.aggregator.trip.stop-signal.enabled=true
iota.aggregator.raw-storage.type=redis
#===============================================================================
# redis properties
#===============================================================================
spring.redis.host=10.100.226.217
spring.redis.port=6379
spring.redis.password=
#===============================================================================
# kafka general properties
#===============================================================================
spring.kafka.bootstrap-servers=b-2.msg-iota-kafka.w1947u.c5.kafka.eu-west-1.amazonaws.com:9094,b-1.msg-iota-kafka.w1947u.c5.kafka.eu-west-1.amazonaws.com:9094
spring.kafka.properties.security.protocol=SSL
spring.kafka.ssl.trust-store-location=file:keystore/aws.msk.truststore.jks
spring.kafka.ssl.trust-store-password=123456
spring.kafka.ssl.trust-store-type=jks
spring.kafka.properties.ssl.endpoint.identification.algorithm=
#===============================================================================
# kafka streams properties
#===============================================================================
iota.kafka.streams.processor.enabled=true
iota.kafka.streams.processor.application-id=demo-iota5-aggregator
iota.kafka.streams.processor.client-id=demo-iota5-aggregator-app-client
iota.kafka.streams.processor.input.topic=demo_iota5_raw_source_data
iota.kafka.streams.processor.input.key-serde=org.apache.kafka.common.serialization.Serdes$StringSerde
iota.kafka.streams.processor.input.value-serde=com.msg.iota.utilities.kafka.serde.SourceDataProtoSerde
iota.kafka.streams.processor.output.topic=demo_iota5_aggregated_collections
iota.kafka.streams.processor.output.key-serde=org.apache.kafka.common.serialization.Serdes$StringSerde
iota.kafka.streams.processor.output.value-serde=com.msg.iota.utilities.kafka.serde.CollectionJsonSerde
iota.kafka.streams.processor.default.key-serde=org.apache.kafka.common.serialization.Serdes$StringSerde
iota.kafka.streams.processor.default.value-serde=com.msg.iota.utilities.kafka.serde.SourceDataProtoSerde
iota.kafka.streams.processor.auto.offset.reset=latest
iota.kafka.streams.processor.properties.num.stream.threads=1
iota.kafka.streams.processor.properties.default.serialization.exception.handler=org.apache.kafka.streams.errors.LogAndContinueExceptionHandler
iota.kafka.streams.processor.properties.default.deserialization.exception.handler=org.apache.kafka.streams.errors.LogAndContinueExceptionHandler
#===============================================================================
# producer properties
#===============================================================================
spring.kafka.properties.spring.json.trusted.packages=*
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=com.msg.iota.utilities.kafka.serializer.SourceDataProtoSerializer
#===============================================================================
# spring properties
#===============================================================================
spring.main.allow-bean-definition-overriding=true
#===============================================================================
#server ssl properties
#===============================================================================
server.ssl.enabled=false
server.ssl.key-store=keystore/server.certificate.p12
server.ssl.key-store-password=123456
server.ssl.keyStoreType=PKCS12
#server.ssl.keyAlias=msg global intermediate ca (msg global root ca)
#server.ssl.key-password=123456
#===============================================================================
#### WEB
#===============================================================================
#-------------------------------------------------------------------------------
# swagger
#-------------------------------------------------------------------------------
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.disable-swagger-default-url=true
springdoc.swagger-ui.oauth.clientId=swagger
springdoc.api-docs.enabled=true
springdoc.show-actuator=true
springdoc.paths-to-match=/api/**,/actuator/info,/actuator/health
server.forward-headers-strategy=framework
#-------------------------------------------------------------------------------
# security - resource server
#-------------------------------------------------------------------------------
iota.web.security.resource.type=none
#===============================================================================
# actuator
#===============================================================================
management.endpoints.web.exposure.include=*
management.endpoint.health.show-components=always
management.endpoint.health.show-details=always
management.health.defaults.enabled=false
iota.kafka.health.enabled=true
iota.redis.health.enabled=true
#===============================================================================
# logging
#===============================================================================
logging.level.root=WARN
logging.level.com.msg=INFO
logging.level.org.apache.kafka=INFO
# by setting this property (or environment variable) to DEBUG, all out of order points will be logged
logging.level.com.msg.iota.dataaggregator.stream.tools.SourceDataAggregatorAdder=DEBUG
#===============================================================================